module Element2DMOD
  use tools
  use ElementMOD
  use IntegratorPtrTYPE
  implicit none
  private
  public :: Element2DTYPE
  type, abstract, extends(ElementTYPE) :: Element2DTYPE
     private
     real(rkind) :: area
   contains
     procedure                                 :: getArea
     procedure(getStiffnessInterf)  , deferred :: getStiffness
     procedure(setAreaInterf)       , deferred :: setArea
     procedure(shapeFuncInterf)     , deferred :: shapeFunc
     procedure(dShapeFuncInterf)    , deferred :: dShapeFunc
     procedure                                 :: jacobian
     procedure                                 :: jacobianDet
  end type Element2DTYPE
  
  abstract interface
     subroutine setAreaInterf(this)
       use tools
       import Element2DTYPE
       class(Element2DTYPE), intent(inout) :: this
     end subroutine setAreaInterf
  end interface
  
  abstract interface
     function shapeFuncInterf(this, x, y)
       use tools
       import Element2DTYPE
       class(Element2DTYPE), intent(inout) :: this
       real(rkind), intent(in) :: x
       real(rkind), intent(in) :: y
       real(rkind), dimension(this%nPoint*this%nDof) :: shapeFuncInterf
     end function shapeFuncInterf
  end interface
  
  abstract interface
     function dShapeFuncInterf(this, x, y)
       use tools
       import Element2DTYPE
       class(Element2DTYPE), intent(inout) :: this
       real(rkind), intent(in) :: x
       real(rkind), intent(in) :: y
       real(rkind), dimension(2, this%nPoint*this%nDof) :: dShapeFuncInterf
     end function dShapeFuncInterf
  end interface
  
  abstract interface
     function jacobianInterf(this, x, y)
       use tools
       import Element2DTYPE
       class(Element2DTYPE), intent(inout) :: this
       real(rkind), intent(in) :: x
       real(rkind), intent(in) :: y
       real(rkind), dimension(2,2) :: jacobian
     end function jacobianInterf
  end Interface
  
  abstract interface
     real(rkind) function jacobianDetInterf(this, jacobian)
       use tools
       import Element2DTYPE
       class(Element2DTYPE), intent(inout) :: this
       real(rkind), dimension(2,2), intent(in) :: jacobian
     end function jacobianDetInterf
  end interface

  abstract Interface
     function getStiffnessInterf(this)
       use tools
       use IntegratorPtrTYPE
       import Element2DTYPE
       class(Element2DTYPE), intent(inout) :: this
       real(rkind), dimension(this%nPoint*this%nDof,this%nPoint,this%nDof) :: getStiffness
     end function getStiffnessInterf
  end Interface
  
contains
  
  real(rkind) function getArea(this)
    implicit none
    class(Element2DTYPE), intent(inout) :: this
    getArea = this%area
  end function getArea
  
end module Element2DMOD
