module Element2DPtrMOD
  use tools
  use PointMOD
  use PointPtrMOD
  use LoadMOD
  use LoadPtrMOD
  use MaterialPtrMOD
  use GeometryPtrMOD
  use FEMIntegratorPtrMOD
  use ElementMOD
  use Element2DMOD
  implicit none
  private
  public :: Element2DPtrTYPE
  type :: Element2DPtrTYPE
     class(Element2DTYPE), pointer :: ptr
   contains
     procedure :: getnPoint
     procedure :: getnDof
     procedure :: getOnePoint
     procedure :: getAllPoints
     procedure :: getPointID
     procedure :: getMaterial
     procedure :: getGeometry
     procedure :: getLoad
     procedure :: getIntegrator
     procedure :: getArea
     procedure :: setnPoint
     procedure :: setnDof
     procedure :: setLoad
     procedure :: setPoint
     procedure :: setIntegrator
     procedure :: setArea
     procedure :: jacobian
     procedure :: jacobianDet
     procedure :: shapeFunc
     procedure :: dShapeFunc
  end type Element2DPtrTYPE

contains

  integer(ikind) function getnPoint(this)
    implicit none
    class(Element2DPtrTYPE), intent(inout) :: this
    getnPoint = this%ptr%nPoint
  end function getnPoint

  integer(ikind) function getnDof(this)
    implicit none
    class(Element2DPtrTYPE), intent(inout) :: this
    getnDof = this%ptr%nDof
  end function getnDof
  
  type(PointPtrTYPE) function getOnePoint(this, i)
    implicit none
    class(Element2DPtrTYPE), intent(inout) :: this
    integer(ikind), intent(in) :: i
    getOnePoint = this%ptr%point(i)
  end function getOnePoint
  
  function getAllPoints(this)
    implicit none
    class(Element2DPtrTYPE), intent(inout) :: this
    type(PointPtrTYPE), dimension(this%nPoint) :: getAllPoints
    getAllPoints(1:this%nPoint) = this%ptr%point(1:this%nPoint)
  end function getAllPoints
  
  integer(ikind) function getPointID(this, i)
    implicit none
    class(Element2DPtrTYPE), intent(inout) :: this
    integer(ikind), intent(in) :: i
    getPointID = this%ptr%point(i)%getID()
  end function getPointID
  
  function getMaterial(this)
    implicit none
    class(Element2DPtrTYPE), intent(inout) :: this
    type(MaterialPtrTYPE) :: getMaterial
    getMaterial = this%ptr%material%ptr
  end function getMaterial

  function getGeometry(this)
    implicit none
    class(Element2DPtrTYPE), intent(inout) :: this
    type(GeometryPtrTYPE) :: getGeometry
    getGeometry = this%ptr%geometry%ptr
  end function getGeometry

  function getLoad(this)
    implicit none
    class(Element2DPtrTYPE), intent(inout) :: this
    type(LoadPtrTYPE) :: getLoad
    getLoad = this%ptr%load%ptr
  end function getLoad

  function getIntegrator(this)
    implicit none
    class(Element2DPtrTYPE), intent(inout) :: this
    type(FEMIntegratorPtrTYPE) :: getIntegrator
    getIntegrator = this%ptr%integrator%ptr
  end function getIntegrator

  subroutine setnPoint(this, nPoint)
    implicit none
    class(Element2DPtrTYPE), intent(inout) :: this
    integer(ikind), intent(in) :: nPoint
    this%ptr%nPoint = nPoint
  end subroutine setnPoint

  subroutine setnDof(this, nDof)
    implicit none
    class(Element2DPtrTYPE), intent(inout) :: this
    integer(ikind), intent(in) :: nDof
    this%ptr%nDof = nDof
  end subroutine setnDof

  subroutine setLoad(this, load)
    implicit none
    class(Element2DPtrTYPE), intent(inout) :: this
    class(LoadTYPE), target, intent(in) :: load
    this%ptr%load%ptr => load
  end subroutine setLoad

  subroutine setPoint(this, i, point)
    implicit none
    class(Element2DPtrTYPE), intent(inout) :: this
    integer(ikind), intent(in) :: i
    class(PointTYPE), target, intent(in) :: point
    this%point(i)%ptr => point
  end subroutine setPoint

  subroutine setIntegrator(this, integrator)
    implicit none
    class(Element2DPtrTYPE), intent(inout) :: this
    type(IntegratorTYPE), target, intent(in) :: integrator
    this%ptr%integrator%ptr => integrator
  end subroutine setIntegrator

  subroutine setLenght(this)
    implicit none
    class(Element2DPtrTYPE), intent(inout) :: this
    call this%ptr%setLenght()
  end subroutine setLenght

  real(rkind) function getLenght(this)
    implicit none
    class(Element2DPtrTYPE), intent(inout) :: this
    getLenght = this%ptr%lenght
  end function getLenght

  function jacobian(this, x, y)
    implicit none
    class(Element2DPtrTYPE), intent(inout) :: this
    real(rkind), intent(in) :: x
    real(rkind), intent(in) :: y
    real(rkind), dimension(2,2) :: jacobian
    jacobian = this%ptr%jacobian(x, y)
  end function jacobian

  real(rkind) function jacobianDet(this, jacobian)
    implicit none
    class(Element2DPtrTYPE), intent(inout) :: this
    real(rkind), dimension(2,2) :: jacobian
    jacobianDet = this%ptr%jacobianDet(jacobian)
  end function jacobianDet

  function shapeFunc(this, x, y)
    implicit none
    class(Element2DPtrTYPE), intent(inout) :: this
    real(rkind), intent(in) :: x
    real(rkind), intent(in) :: y
    real(rkind), dimension(this%ptr%nPoint*this%ptr%nDof) :: shapeFunc
    shapeFunc = this%ptr%shapeFunc(x, y)
  end function shapeFunc

  function dShapeFunc(this, x, y)
    implicit none
    class(Element2DPtrTYPE), intent(inout) :: this
    real(rkind), intent(in) :: x
    real(rkind), intent(in) :: y
    real(rkind), dimension(2, this%ptr%nPoint*this%ptr%nDof) :: dShapeFunc
    dShapeFunc = this%ptr%dShapeFunc(x,y)
  end function dShapeFunc

end module Element2DPtrMOD
